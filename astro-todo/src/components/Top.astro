<div id="container">
  <main class="p-5 w-full">
    <section class="bg-gradient-to-r from-cyan-500 to-blue-500 p-2 rounded-md shadow-lg text-white text-4xl font-bold text-center font-sans">
      <h1>TODO LIST</h1>
      <div class="flex justify-center mt-4">
        <input id="todo-input" type="text" placeholder="Write your todo list here..." class="p-2 rounded-sm text-black text-xs w-3/4">
        <button id="add-button" class="bg-white text-cyan-600 font-bold text-xs p-2 rounded-sm ml-2">ADD</button>
      </div>
    </section>
  </main>
</div>

<script>
document.getElementById('add-button')?.addEventListener('click', async () => {
  const inputElement = document.getElementById('todo-input');
  const title = (inputElement as HTMLInputElement)?.value;

  if (title) {
    try {
      const response = await fetch('http://localhost:3005/todos', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ title })
      });

      if (response.ok) {
        const newTodo = await response.json();
        console.log("Response received:", newTodo);
        if (newTodo && newTodo.id) {
          addTodoToList(newTodo);
          (inputElement as HTMLInputElement).value = '';
        } else {
          alert('Error adding todo: Invalid response format.');
        }
      } else {
        const errorText = await response.text();
        alert(`Error adding todo: ${errorText}`);
      }
    } catch (error) {
      console.error("Error:", error);
      alert('Failed to connect to the server');
    }
  }
});

function addTodoToList(todo) {
  const todosContainer = document.getElementById('todos-container');
  const completedClass = todo.completed ? 'completed' : '';
  const todoElement = `
    <div class="flex justify-between w-full bg-slate-200 rounded-md font-normal text-base p-2 mt-2 ${completedClass}" id="todo-${todo.id}">
      <div class="w-1/4 text-center">${todo.id}</div>
      <div class="w-1/4 text-center ${completedClass}">${todo.title}</div>
      <div class="w-1/4 text-center">${todo.completed ? 'Yes' : 'No'}</div>
      <div class="w-1/4 text-center">
        <button class="complete-todo m-1" data-id="${todo.id}"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-check"><path d="M20 6 9 17l-5-5"/></svg></button>
        <button class="delete-todo m-1" data-id="${todo.id}"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg></button>
      </div>
    </div>
  `;

  todosContainer?.insertAdjacentHTML('beforeend', todoElement);


  if (todo.completed) {
    const titleElement = document.querySelector(`#todo-${todo.id} .text-center:nth-child(2)`);
    if (titleElement) {
      titleElement.style.color = "red";
      titleElement.style.textDecoration = "line-through";
    }
  }
}

window.addEventListener('DOMContentLoaded', async () => {
  try {
    const todosContainer = document.getElementById('todos-container');
    todosContainer.innerHTML = ''; 
    const response = await fetch('http://localhost:3005/todos');
    if (response.ok) {
      const todos = await response.json();
      todos.forEach((todo: any) => addTodoToList(todo));
    } else {
      console.error('Failed to fetch todos:', response.statusText);
    }
  } catch (error) {
    console.error('Error fetching todos:', error);
    alert('Failed to connect to the server');
  }
});
</script>
